name: "CI: Semgrep Cloud Scan"

on:
  push:
    branches: ["*"]
  pull_request:
    branches: ["*"]

jobs:
  semgrep-scan:
    name: "Run Semgrep Cloud + Generate SARIF"
    runs-on: ubuntu-latest

    steps:
      # 1) Checkout the code
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 2) Set up Python 3.10
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      # 3) Install Semgrep CLI
      - name: Install Semgrep CLI
        run: |
          python -m pip install --upgrade pip
          pip install semgrep

      # 4) Confirm SEMGREP_AUTH_TOKEN is present
      - name: Confirm Semgrep Auth Token
        run: |
          if [ -z "$SEMGREP_AUTH_TOKEN" ]; then
            echo "ERROR: SEMGREP_AUTH_TOKEN is not set"
            exit 1
          fi
          echo "Semgrep auth token is set."
        env:
          SEMGREP_AUTH_TOKEN: ${{ secrets.SEMGREP_AUTH_TOKEN }}

      # 5) Run Semgrep Cloud Scan, but do NOT fail the job if findings exist
      - name: Run Semgrep Cloud Scan
        continue-on-error: true
        run: |
          semgrep ci --config=p/ci
        env:
          SEMGREP_AUTH_TOKEN: ${{ secrets.SEMGREP_AUTH_TOKEN }}

      # 6) Generate SARIF via “semgrep scan” (CE) so we get a local file
      - name: Generate SARIF Report (debug)
        if: always()
        run: |
          echo "=== Listing BEFORE semgrep scan ==="
          ls -la
          semgrep scan --config=p/ci --sarif -o semgrep-results.sarif .
          echo "=== Listing AFTER semgrep scan ==="
          ls -la

      # 7) (Optional) Upload SARIF Artifact once SARIF is confirmed
      - name: Upload SARIF Artifact
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: semgrep-sarif
          path: semgrep-results.sarif
